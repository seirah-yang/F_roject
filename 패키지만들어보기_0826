{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6/vwykHQflLh55qZ2xugk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/seirah-yang/Colabwork/blob/main/0826_%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!ls"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QulHIJHSzHYA",
        "outputId": "89909ce7-58d4-474c-a126-5d23fe52c6ca"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "game  sample_data\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import game.sound.echo\n",
        "game.sound.echo.echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NpJN1eC_yfcg",
        "outputId": "f292b9ce-825d-4423-9288-6958aa1fbd2e"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from game.sound import echo\n",
        "echo.echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q8W67XXJzFjD",
        "outputId": "02d4a45a-3a57-473e-c335-562b8f35e632"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from game.sound.echo import echo_test\n",
        "echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UZqxFLZ6zpF-",
        "outputId": "ed3dd85c-0924-4de2-d822-e9ff331ed9c8"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from game.sound.echo import * #all 불러옴\n",
        "echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "csQxWYyZzug9",
        "outputId": "394fca63-dbf1-46f2-8a2b-4d24df69014d"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import game.sound.echo as ec\n",
        "ec.echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D-cgs9NvzxYH",
        "outputId": "f63dd81f-a912-4aec-a06c-29c29be089cb"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import game\n",
        "\n",
        "print(game.VERSION)\n",
        "game.print_version_info() #init file = package를 대변하는 파일"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XaA5Sw9y14sB",
        "outputId": "5779b31b-470a-4a7c-9005-f18c2b3f84de"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3.5\n",
            "The version of this game is 3.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import game\n",
        "\n",
        "print(game.VERSION)\n",
        "game.print_version_info()\n",
        "\n",
        "game.render_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xVHWAJqh26hQ",
        "outputId": "7b85f4e9-a46a-49b4-e695-ea5317254fa2"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3.5\n",
            "The version of this game is 3.5\n",
            "render\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from game.sound import *\n",
        "#echo.echo_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aT079uAG3fFp",
        "outputId": "32c994d0-9d60-4a24-9bc2-371a6b5f50fd"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "echo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from game.sound import *\n",
        "wav.wav_test()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N1q7g0Wh3fQp",
        "outputId": "7ecdbbba-d691-4d1c-ca67-46af3f7f3add"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "wav\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "if __name__ == \"__main__\"\n",
        "\n",
        "import 했을 때, 실행하고 싶은 부분이 있으면 True 하여 수행하고, 없으면 False 하여 수행하지 않게 한다.\n"
      ],
      "metadata": {
        "id": "9oCAbWLJ56Hf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!python mod!.py\n",
        "\n",
        "[mod1.py]\n",
        "def add(a, b):\n",
        "        return a+b\n",
        "\n",
        "def sub (a, b):\n",
        "        return a-b\n",
        "\n",
        "print(add(1, 4))\n",
        "print(sub(4,2))\n",
        "\n",
        "# python mod1.py 처럼 직접 이 파일을 실행했을 때는 __name == \"__main__\" 다음 문장이 수행된다.\n",
        "#궁금하면 print(__name)\n",
        "# 다른 파일에서 이 모듈을 import 사용할때는 __name__==\"__main\"이 거짓이 거짓이 되어 if문 다음 문장이 수행되지 않는다."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 228
        },
        "id": "N_2lB9Zi3fU3",
        "outputId": "4c1aa238-2502-4314-a632-0fa4076c3732"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "python3: can't open file '/content/mod!.py': [Errno 2] No such file or directory\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'mod1' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-3397596956.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msystem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'python mod!.py'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;34m[\u001b[0m\u001b[0mmod1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpy\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'mod1' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "F2_FiKoz3fcm"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
